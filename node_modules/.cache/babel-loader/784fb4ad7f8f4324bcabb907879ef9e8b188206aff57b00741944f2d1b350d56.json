{"ast":null,"code":"var _jsxFileName = \"/Users/leosponnich/Documents/firebase_test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from './firebase/firebase'; // Import the Firestore instance\nimport { collection, query, where, getDocs, updateDoc, doc, setDoc, getDoc, addDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userData, setUserData] = useState([]);\n  const addDocumentToUsersCollection = async () => {\n    try {\n      const usersCollection = collection(firestore, 'users'); // Reference to the \"users\" collection\n\n      // Define the data you want to add to the document\n      const data = {\n        preview_url: 'John Doe',\n        profile_picture: 'dfsfdfsdf',\n        song: 'adicted to you',\n        username: 'Erle Widme'\n        // Add more fields as needed\n      };\n\n      // Add a new document to the \"users\" collection\n      const docRef = await addDoc(usersCollection, data);\n      console.log('Document written with ID:', docRef.id);\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const userRef = collection(firestore, 'users');\n      const userQuerySnapshot = await getDocs(userRef);\n      const userDataArray = [];\n      userQuerySnapshot.forEach(doc => {\n        userDataArray.push(doc.data());\n      });\n      setUserData(userDataArray);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    // Add a new document when the component first mounts\n    addDocumentToUsersCollection();\n\n    // Fetch data from Firestore\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), userData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"profile\",\n          src: user.profile_picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-body-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Now playing: \", user.song]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            autoPlay: true,\n            name: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: user.preview_url,\n              type: \"audio/mpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MEi9diF6EeXMji3OmOnykM+Lnog=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","firestore","collection","query","where","getDocs","updateDoc","doc","setDoc","getDoc","addDoc","jsxDEV","_jsxDEV","App","_s","userData","setUserData","addDocumentToUsersCollection","usersCollection","data","preview_url","profile_picture","song","username","docRef","console","log","id","error","fetchData","userRef","userQuerySnapshot","userDataArray","forEach","push","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","index","className","alt","src","controls","autoPlay","name","type","_c","$RefreshReg$"],"sources":["/Users/leosponnich/Documents/firebase_test/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {firestore} from './firebase/firebase'; // Import the Firestore instance\nimport {collection, query, where, getDocs, updateDoc, doc, setDoc, getDoc, addDoc} from 'firebase/firestore';\n\n\n\nfunction App() {\n  const [userData, setUserData] = useState([]);\n\n  const addDocumentToUsersCollection = async () => {\n    try {\n      const usersCollection = collection(firestore, 'users'); // Reference to the \"users\" collection\n\n      // Define the data you want to add to the document\n      const data = {\n        preview_url: 'John Doe',\n        profile_picture: 'dfsfdfsdf',\n        song: 'adicted to you',\n        username: 'Erle Widme',\n        // Add more fields as needed\n      };\n\n      // Add a new document to the \"users\" collection\n      const docRef = await addDoc(usersCollection, data);\n\n      console.log('Document written with ID:', docRef.id);\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const userRef = collection(firestore, 'users');\n      const userQuerySnapshot = await getDocs(userRef);\n\n      const userDataArray = [];\n      userQuerySnapshot.forEach((doc) => {\n        userDataArray.push(doc.data());\n      });\n\n      setUserData(userDataArray);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Add a new document when the component first mounts\n    addDocumentToUsersCollection();\n\n    // Fetch data from Firestore\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>User Data:</h1>\n      {userData.length > 0 ? (\n        <div>\n          {userData.map((user, index) => (\n            <div key={index} className='floating-body'>\n              <img alt='profile' src={user.profile_picture} />\n              <div className='floating-body-text'>\n                <p>{user.username}</p>\n                <p>Now playing: {user.song}</p>\n                <audio controls={true} autoPlay name=\"media\">\n                  <source src={user.preview_url} type=\"audio/mpeg\" />\n                </audio>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}